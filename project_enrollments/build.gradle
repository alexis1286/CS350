/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    //id 'java-library'
    id 'application'
    id 'java'
    id "com.github.spotbugs" version "4.6.0"
    id 'pmd'
    id 'edu.odu.cs.report_accumulator' version '1.3' 
}

//checkstyle tool
apply plugin: 'checkstyle'
checkstyle {
    ignoreFailures = true
    showViolations = false
}
tasks.withType(Checkstyle) {
    reports {
      html.destination project.file("build/reports/checkstyle/main.html")
    }
}
checkstyleTest.enabled = false

//spotbugs tool
spotbugsMain {
    ignoreFailures = true
    effort = 'max'
    reportLevel = 'medium'
    reports {
       xml.enabled = false
       html.enabled = true
    }
}

spotbugsTest.enabled = false

//pmd tool
pmd {
ignoreFailures = true
    consoleOutput = false
}
pmdTest.enabled = false

java {
    sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
}

//For the graphs on the webpage
reportStats.reportsURL = 'https://www.cs.odu.edu/~ccarroll/cs350/blue1/'
    //deployReports.deployDestination = 'build/reports/tests/test/*'

    // or
    //       ... = 'ssh://yourName@hostAddr:path'
    // or
    //       ... = 'rsync://yourName@hostAddr:path'
    
deployReports.deployDestination = 'rsync://$RSYNC_WEB_USER@$PUBLIC_LINUX_CLUSTER:accumulator/'
   
    //deployReports.deploySshKey = 'path/to/ssh/key' // optional


repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    runtimeClasspath 'org.apache.poi:poi:5.0.0'
    runtimeClasspath 'org.apache.poi:poi-ooxml:5.0.0'
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:28.2-jre'
    implementation 'org.apache.poi:poi:5.0.0'
    implementation 'org.apache.poi:poi-ooxml:5.0.0'

    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest:2.2'
}

application {
	mainClassName = 'edu.odu.cs.cs350.project_enrollments.ProjectEnrollments'
}

jar {
    manifest {
        attributes 'Main-Class': 'edu.odu.cs.cs350.project_enrollments.ProjectEnrollments'
    }

    from {
        (configurations.runtimeClasspath).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    exclude 'META-INF/*.RSA'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*'

    exclude 'META-INF/services/org.apache.poi.extractor.ExtractorProvider'
    exclude 'META-INF/services/org.apache.poi.sl.draw.ImageRenderer'
    exclude 'META-INF/services/org.apache.poi.ss.usermodel.WorkbookProvider'
    exclude 'META-INF/versions/9/*'
    exclude 'org/apache/batik/apps/rasterizer/resources/*'
    exclude 'org/apache/batik/apps/rasterizer/*'
    exclude 'META-INF/services/*'
    exclude 'org/apache/batik/ext/awt/image/codec/imageio/*'
    exclude 'org/apache/batik/ext/awt/image/codec/png/*'
    exclude 'org/apache/batik/ext/awt/image/codec/*'
    exclude 'org/apache/batik/ext/awt/image/codec/util/*'
    exclude 'org/apache/batik/extension/*'
    exclude 'org/apache/batik/extension/svg/*'
    exclude 'org/apache/batik/extensions/*'
    exclude 'org/apache/batik/apps/slideshow/*'
    exclude 'org/apache/batik/apps/svgbrowser/*'
    exclude 'org/apache/batik/apps/svgbrowser/resources/*'
    exclude 'org/apache/batik/swing/*'
    exclude 'org/apache/batik/swing/gvt/*'
    exclude 'org/apache/batik/swing/resources/*'
    exclude 'org/apache/batik/swing/svg/*'
    exclude 'org/apache/batik/swing/svg/resources/*'
    exclude 'org/apache/batik/apps/svgpp/*'
    exclude 'org/apache/batik/apps/svgpp/resources/*'
    exclude 'org/apache/batik/transcoder/*'
    exclude 'org/apache/batik/transcoder/image/*'
    exclude 'org/apache/batik/transcoder/image/resources/*'
    exclude 'org/apache/batik/transcoder/keys/*'
    exclude 'org/apache/batik/transcoder/print/*'
    exclude 'org/apache/batik/transcoder/svg2svg/*'
    exclude 'org/apache/batik/transcoder/wmf/*'
    exclude 'org/apache/batik/transcoder/wmf/tosvg/*'
    exclude 'org/apache/batik/bridge/*'
    exclude 'org/apache/batik/bridge/resources/*'
    exclude 'org/apache/batik/bridge/svg12/*'
    exclude 'META-INF/imports/*'
    exclude 'org/apache/batik/script/*'
    exclude 'org/apache/batik/script/jpython/*'
    exclude 'org/apache/batik/script/rhino/*'
    exclude 'org/apache/batik/script/rhino/resources/*'
    exclude 'org/apache/batik/anim/*'
    exclude 'org/apache/batik/anim/dom/*'
    
}

test {
	ignoreFailures = true
	useJUnitPlatform()
}

//task myJavadocs(type: Javadoc) {
//    source = sourceSets.main.allJava
//    classpath = project.sourceSets.main.compileClasspath
//}
